version: 2
jobs:
  deploy:
    docker:
      - image: circleci/python:3.7.2
    working_directory: ~/repo
    steps:
      - run:
          name: Install base apt packages
          command: |
            sudo apt-get update -qq --yes
            sudo apt-get install -qq --yes git-crypt

      - checkout

      - run:
          name: Unlock our secrets
          command: |
            echo "${GIT_CRYPT_KEY}" | base64 -d > ~/repo/key
            git crypt unlock ~/repo/key
            rm ~/repo/key
      - run:
          name: Install dependencies
          command: |
            python3 --version
            python3 -m venv venv
            source venv/bin/activate
            pip3 install awscli==1.18.27
            curl -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-226.0.0-linux-x86_64.tar.gz | tar -C venv/ -xzf -
            echo 'export PATH="${HOME}/repo/venv/bin:${HOME}/repo/venv/google-cloud-sdk/bin:${PATH}"' >> ${BASH_ENV}

      - run:
          name: Install helm
          when: always
          command: |
            curl https://get.helm.sh/helm-v3.1.2-linux-amd64.tar.gz | \
              tar -xzf -
            sudo mv linux-amd64/helm /usr/local/bin
            helm version
            helm repo add pangeo https://pangeo-data.github.io/helm-chart/
            helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
            helm repo add dask-gateway https://dask.org/dask-gateway-helm-repo/
            helm repo update

            cd ~/repo/pangeo-binder
            helm dependency update
            cd -

      - run:
          name: Install kubectl
          when: always
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.17.4/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
            kubectl version --client

      - run:
          name: Authenticate to Google k8s cluster
          when: always
          command: |
            gcloud auth activate-service-account --key-file ~/repo/secrets/gcloud-service-key.json
            gcloud container clusters --zone=us-central1-b --project=pangeo-181919 get-credentials binder

      - run:
          name: Deploy Google binderhub
          when: always
          command: |
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
            helm upgrade --wait --install \
              ${CIRCLE_BRANCH} pangeo-binder \
              --namespace=${CIRCLE_BRANCH} --version=v0.2.0 \
              -f ./deploy/${CIRCLE_BRANCH}.yaml \
              -f ./secrets/${CIRCLE_BRANCH}.yaml \
              -f ./secrets/common.yaml

      # AWS deployment
      # --------------
      - run:
          name: Authenticate to AWS k8s cluster
          when: always
          command: |
            #unable to get this env var to work for some reason
            #AWS_SHARED_CREDENTIALS_FILE=/home/circleci/repo/secrets-aws/aws-config.txt
            aws --version
            mkdir ~/.aws
            mv /home/circleci/repo/secrets-aws/aws-config.txt ~/.aws/credentials
            aws configure set default.region us-west-2
            aws eks update-kubeconfig --name pangeo-binder > /dev/null
      - run:
          name: Add Runner IP to EKS Kubernetes API Whitelist
          when: always
          command: |
            RUNNERIP=`curl --silent https://checkip.amazonaws.com`
            aws eks update-cluster-config --name pangeo-binder --resources-vpc-config publicAccessCidrs=${RUNNERIP}/32 > /dev/null
            sleep 90
      - run:
          name: Deploy AWS binderhub
          when: always
          command: |
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
            helm upgrade --wait --install \
              ${CIRCLE_BRANCH} pangeo-binder \
              --namespace=${CIRCLE_BRANCH} --version=v0.2.0 \
              -f ./deploy-aws/${CIRCLE_BRANCH}.yaml \
              -f ./secrets-aws/${CIRCLE_BRANCH}.yaml
            #helm history ${CIRCLE_BRANCH} -n ${CIRCLE_BRANCH}
      - run:
          name: Revert to Original EKS IP Whitelist
          when: always
          command: |
            aws eks update-cluster-config --name pangeo-binder --resources-vpc-config publicAccessCidrs=${AWS_IP_WHITELIST} > /dev/null

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only:
                - staging
                - prod
