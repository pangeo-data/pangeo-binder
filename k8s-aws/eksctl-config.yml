apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: pangeo-binder
  region: us-west-2

cloudWatch:
  clusterLogging:
    enableTypes: ["*"]

iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels:
        aws-usage: "cluster-ops"
        k8s-addon: cluster-autoscaler.addons.k8s.io
        k8s-app: cluster-autoscaler
    attachPolicyARNs:
      - "arn:aws:iam::783380859522:policy/cluster-autoscaler"
  - metadata:
      name: pangeo
      namespace: prod
      labels:
        aws-usage: "application"
    attachPolicyARNs:
      - "arn:aws:iam::783380859522:policy/pangeo-data-s3"
  - metadata:
      name: pangeo
      namespace: staging
      labels:
        aws-usage: "application"
    attachPolicyARNs:
      - "arn:aws:iam::783380859522:policy/pangeo-data-s3"

nodeGroups:
  - name: core-spot-v2
    # use single AZ to optimise data transfer between instances, also reconnect to existing hub pvc
    availabilityZones: ["us-west-2c"]
    minSize: 1
    maxSize: 1
    desiredCapacity: 1
    privateNetworking: true
    volumeSize: 100
    volumeType: gp2
    labels:
      node-role.kubernetes.io/core: core
      hub.jupyter.org/node-purpose: core
    instancesDistribution:
      instanceTypes:
        - m5.large
        - m5a.large
      spotInstancePools: 2
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0 # all spot
    ami: auto
    amiFamily: AmazonLinux2
  - name: user-spot
    minSize: 0
    maxSize: 10
    desiredCapacity: 0
    privateNetworking: true
    instancesDistribution:
      instanceTypes:
        - m5.2xlarge
        - m5a.2xlarge
        - m5n.2xlarge
      spotInstancePools: 3
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0 # all spot
    volumeSize: 100
    volumeType: gp2
    labels:
      node-role.kubernetes.io/user: user
      hub.jupyter.org/node-purpose: user
    taints:
      hub.jupyter.org/dedicated: 'user:NoSchedule'
    tags:
        k8s.io/cluster-autoscaler/node-template/label/hub.jupyter.org/node-purpose: user
        k8s.io/cluster-autoscaler/node-template/taint/hub.jupyter.org/dedicated: 'user:NoSchedule'
    ami: auto
    amiFamily: AmazonLinux2
    iam:
      withAddonPolicies:
        autoScaler: true
    preBootstrapCommands: # see https://github.com/weaveworks/eksctl/issues/1310
      - yum install -y iptables-services
      - iptables --insert FORWARD 1 --in-interface eni+ --destination 169.254.169.254/32 --jump DROP
      - iptables-save | tee /etc/sysconfig/iptables
      - systemctl enable --now iptables
  - name: worker-spot
    minSize: 0
    maxSize: 10
    desiredCapacity: 0
    privateNetworking: true
    instancesDistribution:
      instanceTypes:
        - r5.2xlarge
        - r5a.2xlarge
        - r5n.2xlarge
      spotInstancePools: 3
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0
    volumeSize: 100
    volumeType: gp2
    labels:
      node-role.kubernetes.io/worker: worker
      k8s.dask.org/node-purpose: worker
    taints:
      k8s.dask.org/dedicated: 'worker:NoSchedule'
    tags:
        k8s.io/cluster-autoscaler/node-template/label/k8s.dask.org/node-purpose: worker
        k8s.io/cluster-autoscaler/node-template/taint/k8s.dask.org/dedicated: "worker:NoSchedule"
    ami: auto
    amiFamily: AmazonLinux2
    iam:
      withAddonPolicies:
        autoScaler: true
    preBootstrapCommands: # see https://github.com/weaveworks/eksctl/issues/1310
      - yum install -y iptables-services
      - iptables --insert FORWARD 1 --in-interface eni+ --destination 169.254.169.254/32 --jump DROP
      - iptables-save | tee /etc/sysconfig/iptables
      - systemctl enable --now iptables
  - name: scheduler-spot
    minSize: 0
    maxSize: 20
    desiredCapacity: 0
    privateNetworking: true
    instancesDistribution:
      instanceTypes:
        - t3.medium
        - t3a.medium
      spotInstancePools: 2
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0
    volumeSize: 100
    volumeType: gp2
    labels:
      node-role.kubernetes.io/scheduler: scheduler
      k8s.dask.org/node-purpose: scheduler
    taints:
      k8s.dask.org/dedicated: 'scheduler:NoSchedule'
    tags:
      k8s.io/cluster-autoscaler/node-template/label/k8s.dask.org/node-purpose: scheduler
      k8s.io/cluster-autoscaler/node-template/taint/k8s.dask.org/dedicated: "scheduler:NoSchedule"
    ami: auto
    amiFamily: AmazonLinux2
    iam:
      withAddonPolicies:
        autoScaler: true
    preBootstrapCommands: # see https://github.com/weaveworks/eksctl/issues/1310
      - yum install -y iptables-services
      - iptables --insert FORWARD 1 --in-interface eni+ --destination 169.254.169.254/32 --jump DROP
      - iptables-save | tee /etc/sysconfig/iptables
      - systemctl enable --now iptables
